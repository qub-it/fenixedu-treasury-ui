<?xml version='1.0' encoding='UTF-8'?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.datacontract.org/2004/07/WCFGenio" elementFormDefault="qualified" targetNamespace="http://schemas.datacontract.org/2004/07/WCFGenio">
<xs:import schemaLocation="WCFGenio.WSF.WCFServiceWSF-1.0.0-15092015.svc.xsd1.xsd" namespace="http://schemas.microsoft.com/2003/10/Serialization/"/>
<xs:complexType name="Authentication">
<xs:sequence>
<xs:element minOccurs="0" name="signature" nillable="true" type="xs:string"/>
<xs:element minOccurs="0" name="timestamp" type="xs:int"/>
<xs:element minOccurs="0" name="token" nillable="true" type="xs:string"/>
<xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:element name="Authentication" nillable="true" type="tns:Authentication"/>
<xs:complexType name="Response">
<xs:sequence>
<xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
<xs:element minOccurs="0" name="status" type="tns:WCFStatus"/>
</xs:sequence>
</xs:complexType>
<xs:element name="Response" nillable="true" type="tns:Response"/>
<xs:simpleType name="WCFStatus">
<xs:restriction base="xs:string">
<xs:enumeration value="Error"/>
<xs:enumeration value="Ok"/>
<xs:enumeration value="OkMoreNext"/>
<xs:enumeration value="OkMoreBefore"/>
<xs:enumeration value="OkMoreBoth"/>
<xs:enumeration value="Init"/>
<xs:enumeration value="Warning"/>
<xs:enumeration value="ErrorWarning"/>
<xs:enumeration value="OkWarning"/>
<xs:enumeration value="TimeOut"/>
<xs:enumeration value="Reject"/>
<xs:enumeration value="DataAcessError"/>
</xs:restriction>
</xs:simpleType>
<xs:element name="WCFStatus" nillable="true" type="tns:WCFStatus"/>
<xs:complexType name="ResponseInsert">
<xs:complexContent mixed="false">
<xs:extension base="tns:Response">
<xs:sequence>
<xs:element minOccurs="0" name="primaryKey" nillable="true" type="xs:string"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:element name="ResponseInsert" nillable="true" type="tns:ResponseInsert"/>
<xs:complexType name="LoginRequest">
<xs:sequence>
<xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
<xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
<xs:element minOccurs="0" name="year" type="xs:int"/>
</xs:sequence>
</xs:complexType>
<xs:element name="LoginRequest" nillable="true" type="tns:LoginRequest"/>
<xs:complexType name="LoginResponse">
<xs:annotation>
<xs:appinfo>
<IsValueType xmlns="http://schemas.microsoft.com/2003/10/Serialization/">true</IsValueType>
</xs:appinfo>
</xs:annotation>
<xs:sequence>
<xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
<xs:element minOccurs="0" name="status" type="tns:WCFStatus"/>
<xs:element minOccurs="0" name="token" nillable="true" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:element name="LoginResponse" nillable="true" type="tns:LoginResponse"/>
<xs:complexType name="LogicalCondition">
<xs:sequence/>
</xs:complexType>
<xs:element name="LogicalCondition" nillable="true" type="tns:LogicalCondition"/>
<xs:complexType name="Literal">
<xs:complexContent mixed="false">
<xs:extension base="tns:LogicalCondition">
<xs:sequence>
<xs:element minOccurs="0" name="literal" nillable="true" type="tns:AtomicCondition"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:element name="Literal" nillable="true" type="tns:Literal"/>
<xs:complexType name="AtomicCondition">
<xs:sequence/>
</xs:complexType>
<xs:element name="AtomicCondition" nillable="true" type="tns:AtomicCondition"/>
<xs:complexType name="FieldComparison">
<xs:complexContent mixed="false">
<xs:extension base="tns:AtomicCondition">
<xs:sequence>
<xs:element minOccurs="0" name="field1" nillable="true" type="xs:string"/>
<xs:element minOccurs="0" name="field2" nillable="true" type="xs:string"/>
<xs:element minOccurs="0" name="opid" type="xs:int"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:element name="FieldComparison" nillable="true" type="tns:FieldComparison"/>
<xs:simpleType name="Operator">
<xs:restriction base="xs:string">
<xs:enumeration value="Is"/>
<xs:enumeration value="IsNull"/>
<xs:enumeration value="IsNotNull"/>
<xs:enumeration value="Eq"/>
<xs:enumeration value="NotEquals"/>
<xs:enumeration value="Like"/>
<xs:enumeration value="GreaterThan"/>
<xs:enumeration value="GreaterThanEquals"/>
<xs:enumeration value="LesserThan"/>
<xs:enumeration value="LesserThanEquals"/>
<xs:enumeration value="Between"/>
</xs:restriction>
</xs:simpleType>
<xs:element name="Operator" nillable="true" type="tns:Operator"/>
<xs:complexType name="ValueComparison">
<xs:complexContent mixed="false">
<xs:extension base="tns:AtomicCondition">
<xs:sequence>
<xs:element minOccurs="0" name="field" nillable="true" type="xs:string"/>
<xs:element minOccurs="0" name="opid" type="tns:Operator"/>
<xs:element minOccurs="0" name="val" nillable="true" type="tns:Value"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:element name="ValueComparison" nillable="true" type="tns:ValueComparison"/>
<xs:complexType name="Value">
<xs:sequence/>
</xs:complexType>
<xs:element name="Value" nillable="true" type="tns:Value"/>
<xs:complexType name="DoubleValue">
<xs:complexContent mixed="false">
<xs:extension base="tns:Value">
<xs:sequence>
<xs:element minOccurs="0" name="val" type="xs:double"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:element name="DoubleValue" nillable="true" type="tns:DoubleValue"/>
<xs:complexType name="IntValue">
<xs:complexContent mixed="false">
<xs:extension base="tns:Value">
<xs:sequence>
<xs:element minOccurs="0" name="val" type="xs:int"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:element name="IntValue" nillable="true" type="tns:IntValue"/>
<xs:complexType name="StringValue">
<xs:complexContent mixed="false">
<xs:extension base="tns:Value">
<xs:sequence>
<xs:element minOccurs="0" name="val" nillable="true" type="xs:string"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:element name="StringValue" nillable="true" type="tns:StringValue"/>
<xs:complexType name="LogicValue">
<xs:complexContent mixed="false">
<xs:extension base="tns:Value">
<xs:sequence>
<xs:element minOccurs="0" name="val" type="xs:boolean"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:element name="LogicValue" nillable="true" type="tns:LogicValue"/>
<xs:complexType name="DateValue">
<xs:complexContent mixed="false">
<xs:extension base="tns:Value">
<xs:sequence>
<xs:element minOccurs="0" name="val" type="xs:dateTime"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:element name="DateValue" nillable="true" type="tns:DateValue"/>
<xs:complexType name="PrimaryKeyValue">
<xs:complexContent mixed="false">
<xs:extension base="tns:Value">
<xs:sequence>
<xs:element minOccurs="0" name="val" nillable="true" type="xs:string"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:element name="PrimaryKeyValue" nillable="true" type="tns:PrimaryKeyValue"/>
<xs:complexType name="NullComparison">
<xs:complexContent mixed="false">
<xs:extension base="tns:AtomicCondition">
<xs:sequence>
<xs:element minOccurs="0" name="field" nillable="true" type="xs:string"/>
<xs:element minOccurs="0" name="isnull" type="xs:boolean"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:element name="NullComparison" nillable="true" type="tns:NullComparison"/>
<xs:complexType name="SingleField">
<xs:complexContent mixed="false">
<xs:extension base="tns:AtomicCondition">
<xs:sequence>
<xs:element minOccurs="0" name="field" nillable="true" type="xs:string"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:element name="SingleField" nillable="true" type="tns:SingleField"/>
<xs:complexType name="Disjunction">
<xs:complexContent mixed="false">
<xs:extension base="tns:LogicalCondition">
<xs:sequence>
<xs:element minOccurs="0" name="literals" nillable="true" type="tns:ArrayOfLogicalCondition"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:element name="Disjunction" nillable="true" type="tns:Disjunction"/>
<xs:complexType name="ArrayOfLogicalCondition">
<xs:sequence>
<xs:element minOccurs="0" maxOccurs="unbounded" name="LogicalCondition" nillable="true" type="tns:LogicalCondition"/>
</xs:sequence>
</xs:complexType>
<xs:element name="ArrayOfLogicalCondition" nillable="true" type="tns:ArrayOfLogicalCondition"/>
<xs:complexType name="Conjunction">
<xs:complexContent mixed="false">
<xs:extension base="tns:LogicalCondition">
<xs:sequence>
<xs:element minOccurs="0" name="literals" nillable="true" type="tns:ArrayOfLogicalCondition"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:element name="Conjunction" nillable="true" type="tns:Conjunction"/>
<xs:complexType name="OrExpression">
<xs:complexContent mixed="false">
<xs:extension base="tns:LogicalCondition">
<xs:sequence>
<xs:element minOccurs="0" name="lhs" nillable="true" type="tns:LogicalCondition"/>
<xs:element minOccurs="0" name="rhs" nillable="true" type="tns:LogicalCondition"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:element name="OrExpression" nillable="true" type="tns:OrExpression"/>
<xs:complexType name="AndExpression">
<xs:complexContent mixed="false">
<xs:extension base="tns:LogicalCondition">
<xs:sequence>
<xs:element minOccurs="0" name="lhs" nillable="true" type="tns:LogicalCondition"/>
<xs:element minOccurs="0" name="rhs" nillable="true" type="tns:LogicalCondition"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:element name="AndExpression" nillable="true" type="tns:AndExpression"/>
<xs:complexType name="Paging">
<xs:sequence>
<xs:element minOccurs="0" name="getCount" type="xs:boolean"/>
<xs:element minOccurs="0" name="numRecords" type="xs:int"/>
<xs:element minOccurs="0" name="page" type="xs:int"/>
</xs:sequence>
</xs:complexType>
<xs:element name="Paging" nillable="true" type="tns:Paging"/>
<xs:complexType name="Order">
<xs:sequence>
<xs:element minOccurs="0" name="orders" nillable="true" type="tns:ArrayOfOrderBy"/>
</xs:sequence>
</xs:complexType>
<xs:element name="Order" nillable="true" type="tns:Order"/>
<xs:complexType name="ArrayOfOrderBy">
<xs:sequence>
<xs:element minOccurs="0" maxOccurs="unbounded" name="OrderBy" nillable="true" type="tns:OrderBy"/>
</xs:sequence>
</xs:complexType>
<xs:element name="ArrayOfOrderBy" nillable="true" type="tns:ArrayOfOrderBy"/>
<xs:complexType name="OrderBy">
<xs:sequence>
<xs:element minOccurs="0" name="Campo" nillable="true" type="xs:string"/>
<xs:element minOccurs="0" name="Direccao" type="tns:OrderByDirection"/>
</xs:sequence>
</xs:complexType>
<xs:element name="OrderBy" nillable="true" type="tns:OrderBy"/>
<xs:simpleType name="OrderByDirection">
<xs:restriction base="xs:string">
<xs:enumeration value="ASC"/>
<xs:enumeration value="DESC"/>
</xs:restriction>
</xs:simpleType>
<xs:element name="OrderByDirection" nillable="true" type="tns:OrderByDirection"/>
</xs:schema>